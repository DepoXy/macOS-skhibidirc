# vim:tw=0:ts=2:sw=2:et:norl:nospell:ft=conf
# Author: Landon Bouma <https://tallybark.com/>
# Project: https://github.com/DepoXy/macOS-skhibidirc#👤
# License: MIT                                        🚽

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# ISOFF/2024-07-22: These bindings have all been moved to a Hammerspoon config:
#
#   https://github.com/DepoXy/macOS-Hammyspoony#🥄

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Finder foregrounder-opener
#
# Note this blocks default <Cmd-f> Find used by many apps.
# - But if you care, remap to <Ctrl-f> and be more @Linux'y.
#   (Use macOS Settings to remap application menu items.)
#
# ISOFF/2024-07-22: Moved to Hammerspoon. Acts the same, but lets
# us show how to use hs.window.filter to disable hotkeys for specific
# apps.
#
cmd - f [
  * : osascript \
        -e 'tell application "Finder" to reopen' \
        -e 'tell application "Finder" to activate'
  "meld" ~
  ]

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Shift+Ctrl+Cmd+W: Hide EVERYTHING, srsly this is *tight*, nice and fast
# - CALSO: See also Mission Control *Show Desktop* binding in macOS
#   Keyboard Shortcuts, which slides windows away to reveal the desktop.
#   - The author has that feature mapped to Ctrl+Alt+D.
#     - SAVVY: Press Ctrl+Alt+D again to restore windows.
# - CALSO: See similar macOS-Hammyspoony binding, <Shift-Ctrl-Cmd-W>,
#   which hides or minimizes all but the frontmost window.
#   - It minimizes Alacritty windows, but hides all other windows,
#     then brings what was the current window back to the front.

# ISOFF/2024-07-22: Moved to Hammerspoon, to be alongside similar actions.
#
shift + ctrl + alt - w:
  osascript \
    ~/.kit/mOS/macOS-skhibidirc/lib/hide-all-windows.osa

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Alacritty window fronters.
# - DPNDS: Requires that the termianl window titles starts with a unique number,
#   e.g., if the current directory is user home, it might be "1. ~".
#   - CXREF: Homefries has a terminal window titler that numbers windows
#     for Alacritty, mate-terminal, and iTerm2:
#       https://github.com/DepoXy/sh-humble-prompt#🙇
#         https://github.com/DepoXy/sh-humble-prompt/blob/release/lib/show-command-name-in-window-title.sh
#           ~/.kit/sh/sh-humble-prompt/lib/show-command-name-in-window-title.sh

# ISOFF/2024-07-22: Moved to Hammerspoon, so these wouldn't be the only
# bindings that remained in macOS-skhibidirc.
#
cmd - 1 : osascript ~/.kit/mOS/macOS-skhibidirc/lib/alacritty-front-window-number.osa 1
cmd - 2 : osascript ~/.kit/mOS/macOS-skhibidirc/lib/alacritty-front-window-number.osa 2
cmd - 3 : osascript ~/.kit/mOS/macOS-skhibidirc/lib/alacritty-front-window-number.osa 3
cmd - 4 : osascript ~/.kit/mOS/macOS-skhibidirc/lib/alacritty-front-window-number.osa 4
cmd - 5 : osascript ~/.kit/mOS/macOS-skhibidirc/lib/alacritty-front-window-number.osa 5
cmd - 6 : osascript ~/.kit/mOS/macOS-skhibidirc/lib/alacritty-front-window-number.osa 6
cmd - 7 : osascript ~/.kit/mOS/macOS-skhibidirc/lib/alacritty-front-window-number.osa 7
cmd - 8 : osascript ~/.kit/mOS/macOS-skhibidirc/lib/alacritty-front-window-number.osa 8
cmd - 9 : osascript ~/.kit/mOS/macOS-skhibidirc/lib/alacritty-front-window-number.osa 9

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Gmail or Outlook foregrounder
#
# - Opens first window found with the following prefix:
#   - Gmail prefix
#       "Inbox "
#   - Google Calendar [author keeps Gmail and Cal tabs in same window]
#       "Google Calendar - "
#   - Outlook prefix [for when you use Outlook on a host and not Gmail]
#       "Mail - "
#   - Outlook, when you've been logged off (/srsly)
#       "Sign in to Outlook"
#   - Outlook, when you've been signed out (ugh, more timeout plz)
#       "Sign out"

# ISOFF/2024-07-22: Relocated to macOS-Hammyspoony, which will front and
# focus a single Chrome window without also making other Chrome windows
# visible (e.g., by calling hs.window:raise():focus()).
# - I think the Hammerspoon API uses the Cocoa API, which is more powerful
#   and faster than AppleScript. In Hammerspoon, we can do most of the
#   things we were doing with AppleScript in this config, but using the
#   faster, more powerful, and more flexible Hammerspoon Cocoa bindings.
#
shift + ctrl + cmd - a:
  osascript \
    ~/.kit/mOS/macOS-skhibidirc/lib/raise--chrome--window-or-open.osa \
      "https://mail.google.com/mail/u/0/#inbox" \
      "Inbox " \
      "Google Calendar - " \
      "Mail - " \
      "Sign in to Outlook" \
      "Sign out"

# Calendar foregrounder
#
# - Opens first window found with the following prefix:
#   - Outlook Calendar
#       "Calendar - "
#   - For one vendor, when you join a meeting from the calendar entry, it
#     opens a new Webex tab. So sometimes the active tab is the Webex tab,
#     and not the calendar tab.
#       "Cisco Webex Meetings - "
#   - Outlook tab titles, as explained for Email foregrounder above:
#       "Sign in to Outlook"
#       "Sign out"

# ISOFF/2024-07-08: This might be revived if needed again,
# but lately author has been using email and calendar in
# same window (and not Outlook).
#
#   shift + ctrl + cmd - c:
#     osascript \
#       ~/.kit/mOS/macOS-skhibidirc/lib/raise--chrome--window-or-open.osa \
#         "" \
#         "Calendar - " \
#         "Cisco Webex Meetings - " \
#         "Sign in to Outlook" \
#         "Sign out"

# ALTLY: If you use an Email application instead, you could override
# the previous binding in your own skhdrc (loaded at the bottom of
# this file).
#
# - E.g.:
#
#     # Microsoft Outlook foregrounder/opener
#     shift + ctrl + cmd - a:
#       osascript \
#         -e 'tell application "Microsoft Outlook" to reopen' \
#         -e 'tell application "Microsoft Outlook" to activate'

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Messenger or Assorted Chat tab foregrounder
#
# - Opens first window found with the following prefix:
#   - Android SMS
#       "Messages for web"
#       "Google Messages for web"
#   - Facebook Messenger
#       "Messenger"
#   - Insta
#       "Inbox • Chats"
#   - Author's local BM index
#       "🗨️         Chat & Social"

# ISOFF/2024-07-22: Relocated to macOS-Hammyspoony.
#
shift + ctrl + cmd - s:
  osascript \
    ~/.kit/mOS/macOS-skhibidirc/lib/raise--chrome--window-or-open.osa \
      "https://www.messenger.com/" \
      "Messages for web" \
      "Google Messages for web" \
      "Messenger" \
      "Inbox • Chats" \
      "🗨️         Chat & Social"

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Slack foregrounder/opener
# DUNNO/2024-07-05: Doesn't work:
#   shift + ctrl + cmd - d:

# ISOFF/2024-07-22: Moved to Hammerspoon, though works just the same.
#
shift + ctrl + cmd - f:
  osascript \
    -e 'tell application "Slack" to reopen' \
    -e 'tell application "Slack" to activate'

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Spotify foregrounder/๏קєภer

# ISOFF/2024-07-22: Moved to Hammerspoon, though works just the same.
#
shift + ctrl + cmd - x:
  osascript \
    -e 'tell application "Spotify" to reopen' \
    -e 'tell application "Spotify" to activate'

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Some other app opener ideas:
#
#   # OpenLens foregrounder/opener
#   shift + ctrl + cmd - q:
#     osascript \
#       -e 'tell application "OpenLens" to reopen' \
#       -e 'tell application "OpenLens" to activate'
#
#   # DBeaver foregrounder/opener
#   shift + ctrl + cmd - e:
#     osascript \
#       -e 'tell application "DBeaver Community" to reopen' \
#       -e 'tell application "DBeaver Community" to activate'
#
#   # Webex foregrounder/opener
#   shift + ctrl + cmd - w:
#     osascript \
#       -e 'tell application "Webex Meetings" to reopen' \
#       -e 'tell application "Webex Meetings" to activate'
#
#   # Teams foregrounder/opener
#   shift + ctrl + cmd - t:
#     osascript \
#       -e 'tell application "Microsoft Teams" to reopen' \
#       -e 'tell application "Microsoft Teams" to activate'
#
#   # Postman foregrounder/opener
#   shift + ctrl + cmd - p:
#     osascript \
#       -e 'tell application "Postman" to reopen' \
#       -e 'tell application "Postman" to activate'

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# PowerThesaurus [browser window]
# - SAVVY: So this doesn't block File > Print for most apps,
#          we only wire for a few specific applications.

# ISOFF/2024-07-22: Relocated to macOS-Hammyspoony.
#
cmd - p [
  "alacritty"       : osascript \
      ~/.kit/mOS/macOS-skhibidirc/lib/raise--chrome--window-or-open.osa \
        "https://www.powerthesaurus.org/" \
        "Power Thesaurus"
  "chrome"          : osascript \
      ~/.kit/mOS/macOS-skhibidirc/lib/raise--chrome--window-or-open.osa \
        "https://www.powerthesaurus.org/" \
        "Power Thesaurus"
  "iterm2"          : osascript \
      ~/.kit/mOS/macOS-skhibidirc/lib/raise--chrome--window-or-open.osa \
        "https://www.powerthesaurus.org/" \
        "Power Thesaurus"
  "macvim"          : osascript \
      ~/.kit/mOS/macOS-skhibidirc/lib/raise--chrome--window-or-open.osa \
        "https://www.powerthesaurus.org/" \
        "Power Thesaurus"
  *                 ~
]

# ***

# Regex Dictionary by Lou Hevly [browser window]

# ISOFF/2024-07-22: Relocated to macOS-Hammyspoony.
#
shift + cmd - x:
  osascript \
    ~/.kit/mOS/macOS-skhibidirc/lib/raise--chrome--window-or-open.osa \
      "https://www.visca.com/regexdict/" \
      "Regex Dictionary by Lou Hevly"

# ***

# Google Chrome — Raise *Inspect* Window (Cmd-r)

# ISOFF/2024-07-22: Relocated to macOS-Hammyspoony.
#
cmd - r:
  osascript \
    ~/.kit/mOS/macOS-skhibidirc/lib/raise--chrome--window-or-open.osa \
      "" \
      "DevTools" \
      "Inspect with Chrome Developer Tools" \
      "devtools://"

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Google Chrome — New Window
# - ALTLY:
#     /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --new-window
# - WRONG: Avoid using `open`, e.g.,:
#     open -na "Google Chrome" --args --new-window
#   - If you haven't used the command in a while, it'll literally
#     take ~5s to run. Which is very disruptive to one's flow!
#   - It also fronts all the other Chrome windows on top of your
#     other windows — even though Alt-Tab will still take you
#     back to whatever app you were just on. So there's a mental-
#     model disconnect, where it looks like the MRU window is
#     another Chrome window, but when you Alt-Tab, you bring a
#     much more buried window up top. (I know, hardcore Mac folx
#     will tell me this because macOS is application-centric and
#     not window-centric like Linux, but, seriously, how is this
#     a good design choice? macOS window management is off the
#     rails.)
#     - Note that when you close the new window, macOS will still
#       front another Chrome window, if one is visible in the stack.
#       Ugh. Seriously. (Though at least that behavior encourages me
#       to close Chrome windows, or to hide or minimize them.)
# - SAVVY: If Chrome is not hidden, this fronts just the one new window.
#   - But if Chrome is hidden, this fronts all its hidden windows.
#     I.e., all Chrome windows will be visable on top of whatever app
#     you're currently using (though <Alt-Tab> will skip those other
#     Chrome windows are return you to that app).
# - BWARE: This binding will sometimes start half-working, opening
#   a new window, but not fronting it.
#   - Restart Chrome if this happens, and it'll correct the issue.

# ISOFF/2024-07-22: Moved to Hammerspoon, which can unhide the app
# first without bringing all windows above the current window, and
# then opens a new window, and only the new window will be in front
# of whatever window you were on previously.
#
cmd - t:
  osascript \
    -e 'tell application "Google Chrome"' \
      -e 'make new window' \
    -e 'end tell'

# ***

# Google Chrome — Foregrounder

# ISOFF/2024-07-22: Moved to Hammerspoon, which can foreground the app
# without bringing all its windows in front of the current window when
# you run the binding.
#
shift + cmd - t:
  osascript \
    -e 'tell application "Chrome" to reopen' \
    -e 'tell application "Chrome" to activate'

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# Alacritty — New Window (Cmd-m)
# - ALTLY: Except Homefries is specific about the starting directory,
#   so --working-directory is useless:
#     open -na alacritty --args --working-directory ~
# - ALTLY: Or if you like iTerm2:
#     osascript \
#       -e 'tell app "iTerm2"' \
#         -e 'create window with default profile' \
#         -e activate \
#       -e end tell

# ISOFF/2024-07-22: Moved to Hammerspoon
#
cmd - m : open -na alacritty

# Alacritty — Foreground (Shift-Cmd-M)

# ISOFF/2024-07-22: Moved to Hammerspoon
#
shift + cmd - m:
  osascript \
    -e 'tell application "Alacritty" to reopen' \
    -e 'tell application "Alacritty" to activate'

# Terminal.app — New Window (Ctrl-Cmd-M)
# - For the rare time you want to test Apple Terminal.app

# ISOFF/2024-07-22: Moved to Hammerspoon
#
ctrl + cmd - m:
  osascript \
    -e 'tell app "Terminal"' \
      -e 'do script ""' \
      -e activate \
    -e end tell

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# MacVim — Application Foregrounder (Cmd-`)
# - Grave accent '`' is:
#     kVK_ANSI_Grave = 0x32

# ISOFF/2024-07-22: Moved to Hammerspoon, why not.
#
cmd - 0x32:
  osascript \
    -e 'tell application "MacVim" to reopen' \
    -e 'tell application "MacVim" to activate'

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

# SAVVY: Use Apple kVK_ANSI_* value, not ASCII 0x2D ('-'):
#     kVK_ANSI_Minus = 0x1B
# - CXREF: See Events.h link above

# <Cmd-Minus> — Put YYYY-MM-DD into clipboard.
# - Note the printf avoids newline injection.
#   - Though below we also use `tr -d`...
# - CALSO: Homefries $(TTT) command and Dubs-Vim 'TTT' alias.
cmd - 0x1B: /bin/dash -c 'printf "%s" "$(date "+%Y-%m-%d")" | pbcopy'

# <Ctrl-Cmd-Semicolon> — Put normal date plus:time into clipboard.
# - HSTRY: Named after erstwhile Homefries $(TTTtt:) command.
ctrl + cmd - 0x29: /bin/dash -c 'printf "%s" "$(date "+%Y-%m-%d %H:%M")" | tr -d "\n" | pbcopy'

# <Ctrl-Cmd-Apostrophe(Quote)> — Put dashed date-plus-time into clipboard.
# - CALSO: Homefries $(TTTtt-) command.
ctrl + cmd - 0x27: /bin/dash -c 'printf "%s" "$(date "+%Y-%m-%d-%H-%M")" | tr -d "\n" | pbcopy'

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ #

